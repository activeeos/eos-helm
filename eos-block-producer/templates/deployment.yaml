apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "eos-block-producer.fullname" . }}
  labels:
    app: {{ template "eos-block-producer.name" . }}
    chart: {{ template "eos-block-producer.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  selector:
    matchLabels:
      app: {{ template "eos-block-producer.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "eos-block-producer.name" . }}
        release: {{ .Release.Name }}
        nodeGroup: {{ .Values.nodeGroup }}
    spec:
      volumes:
        - name: host-modules
          hostPath:
            path: /lib/modules
            type: Directory
        {{ if .Values.useCaddy }}
        - name: caddy-config
          configMap:
            name: {{ template "eos-block-producer.fullname" . }}-caddy
        {{ end }}
        {{- if .Values.configSecret.enabled }}
        - name: eos-config
          projected:
            sources:
              - secret:
                  name: {{ .Values.configSecret.name }}
                  items:
                    - key: {{ .Values.configSecret.key }}
                      path: {{ .Values.configSecret.key }}
                      mode: 0600
        {{- else }}
        - name: eos-config
          configMap:
            name: {{ template "eos-block-producer.fullname" . }}-nodeos
        {{- end }}
        - name: eos-genesis
          configMap:
            name: {{ template "eos-block-producer.fullname" . }}-genesis
        - name: eos-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "eos-block-producer.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.wireguard.enabled }}
        - name: wg-config
          configMap:
            name: {{ template "eos-block-producer.fullname" . }}-wg
        {{ end }}
      containers:
        {{- if .Values.wireguard.enabled }}
        - name: {{ .Chart.Name }}-wireguard
          image: "{{ .Values.wireguardImage.repository }}:{{ .Values.wireguardImage.tag }}"
          imagePullPolicy: {{ .Values.wireguardImage.pullPolicy }}
          ports:
            - name: wg
              containerPort: {{ .Values.wireguard.port }}
              protocol: UDP
          volumeMounts:
            - name: wg-config
              mountPath: /etc/wireguard/
              readOnly: true
            - name: host-modules
              mountPath: /lib/modules
          securityContext:
            capabilities:
              add: ["NET_ADMIN", "SYS_MODULE"]
        {{ end }}
        {{ if .Values.useCaddy }}
        - name: {{ .Chart.Name }}-caddy
          image: "{{ .Values.caddyImage.repository }}:{{ .Values.caddyImage.tag }}"
          imagePullPolicy: {{ .Values.caddyImage.pullPolicy }}
          args: ["--conf", "/etc/caddy/Caddyfile", "--log", "stdout", "--agree=true"]
          ports:
            - name: caddy-http
              containerPort: 80
              protocol: TCP
            - name: caddy-https
              containerPort: 443
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 80
          readinessProbe:
            tcpSocket:
              port: 80
          volumeMounts:
            - name: caddy-config
              mountPath: /etc/caddy
            - name: eos-data
              mountPath: /root/.caddy
              subPath: caddy
        {{ end }}
        - name: {{ .Chart.Name }}-nodeos
          image: "{{ .Values.eosImage.repository }}:{{ .Values.eosImage.tag }}"
          imagePullPolicy: {{ .Values.eosImage.pullPolicy }}
          args: [
                  "/opt/eosio/bin/nodeos",
                  "--config-dir=/etc/eos-bp",
                  "--data-dir=/var/eos-bp",
                  {{- if .Values.defineGenesis }}
                  "--genesis-json=/etc/eos-genesis/genesis.json",
                  {{- end }}
                ]
          ports:
            - name: eos-p2p
              containerPort: 9876
              protocol: TCP
          {{ if not .Values.useCaddy }}
            - name: eos-http
              containerPort: 8888
              protocol: TCP
          {{ end }}
          livenessProbe:
            initialDelaySeconds: 600
            tcpSocket:
              port: 9876
          readinessProbe:
            tcpSocket:
              port: 9876
          volumeMounts:
            - name: eos-genesis
              mountPath: /etc/eos-genesis
            - name: eos-config
              mountPath: /etc/eos-bp
            - name: eos-data
              mountPath: /var/eos-bp
              subPath: eos-data
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
