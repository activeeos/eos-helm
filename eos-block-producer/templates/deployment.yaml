apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "eos-block-producer.fullname" . }}
  labels:
    app: {{ template "eos-block-producer.name" . }}
    chart: {{ template "eos-block-producer.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  selector:
    matchLabels:
      app: {{ template "eos-block-producer.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "eos-block-producer.name" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: caddy-config
          configMap:
            name: {{ template "eos-block-producer.fullname" . }}-caddy
        - name: eos-config
          configMap:
            name: {{ template "eos-block-producer.fullname" . }}-nodeos
        - name: eos-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "eos-block-producer.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      containers:
        - name: {{ .Chart.Name }}-caddy
          image: "{{ .Values.caddyImage.repository }}:{{ .Values.caddyImage.tag }}"
          imagePullPolicy: {{ .Values.caddyImage.pullPolicy }}
          args: ["--conf", "/etc/caddy/Caddyfile", "--log", "stdout", "--agree=true"]
          ports:
            - name: caddy-http
              containerPort: 80
              protocol: TCP
            - name: caddy-https
              containerPort: 443
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 80
          readinessProbe:
            tcpSocket:
              port: 80
          volumeMounts:
            - name: caddy-config
              mountPath: /etc/caddy
            - name: eos-data
              mountPath: /root/.caddy
              subPath: caddy
        - name: {{ .Chart.Name }}-nodeos
          image: "{{ .Values.eosImage.repository }}:{{ .Values.eosImage.tag }}"
          imagePullPolicy: {{ .Values.eosImage.pullPolicy }}
          args: ["/opt/eosio/bin/nodeos", "--config-dir=/etc/eos-bp", "--data-dir=/var/eos-bp"]
          ports:
            - name: eos-p2p
              containerPort: 9876
              protocol: TCP
            - name: eos-http
              containerPort: 8888
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: 3000
          readinessProbe:
            tcpSocket:
              port: 9876
          volumeMounts:
            - name: eos-config
              mountPath: /etc/eos-bp
            - name: eos-data
              mountPath: /var/eos-bp
              subPath: eos-data
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
